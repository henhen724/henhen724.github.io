import { EventEmitter } from 'events'
import { SubscriptionClient } from 'subscriptions-transport-ws'

export class ScoutSubscription extends EventEmitter {

  private subscription = null

  constructor(request: any, extract?: (data: any) => any) {
    super()
    this.subscription = request.subscribe({
      next: (json: any) => {
        if (json.data && (!json.errors || json.errors.length === 0)) {
          this.emit('data', extract ? extract(json.data) : json.data)
        }
        else {
          let err = new Error(json.errors[0].message) as any
          err.errors = json.errors
          this.emit('error', err)
        }
      },
      onError: (err: Error) => this.emit('error', err)
    })
  }

  unsubscribe() {
    this.subscription.unsubscribe()
  }
}